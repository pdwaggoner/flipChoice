% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.R
\name{predict.FitChoice}
\alias{predict.FitChoice}
\title{Predict choice probabilities for choice model scenarios}
\usage{
\method{predict}{FitChoice}(object, scenario,
  rule = c("logit respondent", "logit draw", "first choice draw",
  "first choice respondent"), scale = NULL, offset = NULL, ...)
}
\arguments{
\item{object}{A \code{FitChoice} object output from
\code{\link{FitChoiceModel}}.}

\item{scenario}{A list containing the scenario/alternatives to use
    to make a prediction of respondent choices. Each element of the
list is one alternative to use for the prediction. The elements
are named character vectors of the form
\code{c("attribute1" = "level1", "attribute2" = "level3", ...)}.
See the examples.}

\item{rule}{Character string, currently, one of
\code{"logit respondent"}, \code{"logit draw"},
\code{"first choice draw"}, or \code{"first choice respondent"}
specifying how to compute the choice probabilities. Ignored if
\code{object} was fit with \code{algorithm = "LCA"}. See the
details. Defaults to \code{"logit respondent"}.}

\item{scale}{A numeric vector with length equal to \code{number of
respondents}, which will be used to weight/multiply the
utilities for each respondent. Note, \code{offset} is applied
before \code{scale}.}

\item{offset}{A numeric matrix with dimension \code{number of
respondents x number of alternatives}, containing offsets to be
applied to each utility. Note, \code{offset} is applied before
\code{scale}.}

\item{...currently}{ignored}
}
\value{
A \code{num. respondents x num. alternatives} matrix of
    estimated choice probabilites
}
\description{
Given a fit from \code{\link{FitChoiceModel}}, and a new scenario
of alternatives, predict choice probabilites for each respondent
for each alternative.
}
\details{
For a choice model fit using Hierarchical Bayes
    (\code{algorithm = "HB-Stan"} in \code{\link{FitChoiceModel}}),
    the various \code{rule}s have the following implementations:
\itemize{
\item \code{"logit respondent"} - the default, for each respondent, utilities
are averaged over HB iterations and the prediction probabilities are obtained by
applying the softmax function to these average utilites.
\item \code{"logit draw"} - Similar to \code{"logit respondent"} except the
softmax function is used first on each HB iteration for each respondent and then
the mean is computed over HB iterations for each respondent to obtain the prediction.
\item \code{"first choice draw"} - For every HB iteration, the respondent's choice
based on the computed utilities is tallied, the prediction is the frequency each
alternative is chosen over HB iterations.
\item \code{"first choice respondent"} - the utilities for each respondent are
averaged over HB iterations and their choice is computed based on this average
utility. Thus, the output matrix will contain one \code{1} in each row with all
other entries \code{0}.
}

For a choice model fit using latent class analysis
(\code{algorithm = "LCA"} in \code{\link{FitChoiceModel}}), utilites are calculated
for each class and the calculated probabilities are multipled by the the posterior
probabilities of class membership for each respondent to obtain the prediction.
}
\examples{
data(fast.food, package = "flipChoice")
data(fast.food.design, package = "flipChoice")
choices <- fast.food[, grepl("^choice", colnames(fast.food))]
tasks <- fast.food[, grepl("^task", colnames(fast.food))]
fit <- FitChoiceModel(design = fast.food.design,
                      choices = choices, tasks = tasks,
                      hb.stanfit = TRUE, hb.warnings = FALSE,
                      hb.iterations = 20, hb.beta.draws.to.keep = 10)
scenario <- list("Alt1" = c("Price per person" = "$15",
                            "Cuisine" = "Pizza",
                            "Delivery time" =  "30 min",
                            "Average review rating (out of 5 stars)" = "4"),
                  "Alt2" = c("Price per person" = "$20",
                            "Cuisine" = "Hamburgers",
                            "Delivery time" =  "40 min",
                            "Average review rating (out of 5 stars)" = "4.7"))
head(predict(fit, scenario, rule = "logit respondent"))
\dontrun{
al <- list(Att1 = 1:2, Att2 = 1:2, Att3 = 1:3)
des.none <- ChoiceModelDesign(design.algorithm = "Partial profiles",
                              attribute.levels = al,
                              n.questions = 12,
                              n.versions = 2,
                              alternatives.per.question = 2,
                              none.alternatives = 2,
                              none.positions = 2:3,
                              seed = 1)
fit.none <- FitChoiceModel(design = des.none,
                      hb.iterations = 15, hb.chains = 2,
                      hb.warnings = FALSE,
                      simulated.priors.from.design = TRUE,
                      simulated.sample.size = 100)

scen.none <- list("Alt. 1" = c("Att1" = 1, "Att2" = 2, "Att3" = 3),
                  "Alt. 2" = c("Att1" = 2, "Att2" = 2, "Att3" = 1),
                  "None" = c("Alternative" = "2 (none of these)"))
out <- predict(fit.none, scen.none)
}
}
