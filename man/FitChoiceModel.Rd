% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/choicemodel.R
\name{FitChoiceModel}
\alias{FitChoiceModel}
\title{FitChoiceModel}
\usage{
FitChoiceModel(design = NULL, experiment.data = NULL, cho.file = NULL,
  design.file = NULL, attribute.levels.file = NULL, cov.formula = NULL,
  cov.data = NULL, choices = NULL, questions = NULL,
  synthetic.priors = NULL, synthetic.priors.from.design = FALSE,
  synthetic.sample.size = 100, n.classes = 1, subset = NULL,
  weights = NULL, missing = "Use partial data", seed = 123,
  tasks.left.out = 0, algorithm = "HB-Stan", lc.tolerance = 1e-04,
  initial.parameters = NULL, normal.covariance = "Full",
  hb.iterations = 500, hb.chains = 8, hb.max.tree.depth = 10,
  hb.adapt.delta = 0.8, hb.keep.samples = FALSE, hb.stanfit = TRUE,
  hb.prior.mean = 0, hb.prior.sd = 5, hb.warnings = TRUE,
  hb.beta.draws.to.keep = 0, include.choice.parameters = TRUE,
  respondent.ids = NULL, ...)
}
\arguments{
\item{design}{A design object produced by ChoiceModelDesign}

\item{experiment.data}{A data.frame from an Experiment question}

\item{cho.file}{The file path to a cho file.}

\item{design.file}{The file path to a Sawtooth design file (dual file
format) or a JMP design file.}

\item{attribute.levels.file}{The file path to an Excel file containing the
level names of each attribute.}

\item{cov.formula}{An optional \code{\link{formula}} for any fixed
(respondent-specific) covariates to be included in the model.
When only 1 class is specified, covariates are applied to the mean
parameter theta (fixed covariates). When more than 1 class is
specified, covariates are applied to the class weight parameters.}

\item{cov.data}{An optional \code{\link{data.frame}} containing the
variables present in \code{cov.formula}.}

\item{choices}{A data.frame of choices made by respondents for each
question.}

\item{questions}{A data.frame of IDs of tasks presented to the
respondents.}

\item{synthetic.priors}{A 2-column matrix whose columns correspond to the
mean and standard deviations of the parameters; or a character matrix
with attribute levels and corresponding mean and sd columns after each
attribute level column.}

\item{synthetic.priors.from.design}{Whether synthetic priors from the design
object are to be used.}

\item{synthetic.sample.size}{The number of synthetic respondents to
generate.}

\item{n.classes}{The number of latent classes.}

\item{subset}{An optional vector specifying a subset of
observations to be used in the fitting process.}

\item{weights}{An optional vector of sampling or frequency weights.}

\item{missing}{How missing data is to be treated in the regression. Options:
\code{"Error if missing data"},
\code{"Exclude cases with missing data"}, and
\code{"Use partial data"}.}

\item{seed}{Random seed.}

\item{tasks.left.out}{Number of questions to leave out for
cross-validation.}

\item{algorithm}{Either "HB-Stan" for Hierarchical Bayes or "LCA" for
latent class analysis.}

\item{lc.tolerance}{The tolerance used for defining convergence in
latent class analysis.}

\item{initial.parameters}{Specify initial parameters intead of
starting at random in latent class analysis. The initial parameters
need to be supplied as list consisting of a matrix called
class.parameters whose columns are the parameters of the classes, and a
vector called class.sizes containing the class size parameters.}

\item{normal.covariance}{The form of the covariance matrix for
Hierarchical Bayes. Can be 'Full, 'Spherical', 'Diagonal'.}

\item{hb.iterations}{The number of iterations in Hierarchical
Bayes.}

\item{hb.chains}{The number of chains in Hierarchical Bayes.}

\item{hb.max.tree.depth}{http://mc-stan.org/misc/warnings.html#maximum-treedepth-exceeded}

\item{hb.adapt.delta}{http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup}

\item{hb.keep.samples}{Whether to keep the samples of all the
parameters in the output.}

\item{hb.stanfit}{Whether to include the stanfit property.}

\item{hb.prior.mean}{The mean for the priors of the mean parameters
theta_raw. This is either passed as a scalar which applies to
all parameters or a numeric vector with each element
corresponding to a variable or attribute. If hb.prior.mean is
nonzero for a categorical attribute, the attribute is treated
as ordered categorical and hb.prior.mean controls the offsets
from the base attribute.}

\item{hb.prior.sd}{The standard deviations for the priors of the
mean parameters theta_raw. This is passed as a numeric vector
with each element corresponding to an attribute, or a
scalar. If hb.prior.mean is nonzero for a categorical
attribute, the attribute is treated as ordered categorical and
hb.prior.sd controls the standard deviations of the offsets
from the base attribute.}

\item{hb.warnings}{Whether to show warnings from Stan.}

\item{hb.beta.draws.to.keep}{Maximum number of beta draws per
respondent to return in beta.draws.}

\item{include.choice.parameters}{Whether to include
alternative-specific parameters.}

\item{respondent.ids}{If a cho file is supplied, this is the vector of the
respondent IDs to use.}

\item{...}{Additional parameters to pass on to \code{rstan::stan}
and \code{rstan::sampling}.}
}
\value{
A list with the following components: \itemize{
    \item \code{respondent.parameters} A matrix containing the parameters
    of each respondent.
    \item \code{reduced.respondent.parameters} A matrix containing the
    parameters of each respondent, excluding the constrained parameters.
    \item \code{synthetic.respondent.parameters} If synthetic priors are
    used, this is a matrix containing the synthetic parameters of
    each respondent, excluding the constrained parameters.
    \item \code{parameter.statistics} A matrix
    containing parameter statistics such as effective sample size
    and Rhat.
    \item \code{stan.fit} The stanfit object from the
    analysis.
    \item \code{beta.draws} A 3D array containing
    sampling draws of beta for each respondent.
    \item \code{parameter.names} Character vector of parameter names
    for the mean parameters in the model.
    \item \code{in.sample.accuracy} The in-sample prediction accuracy.
    \item \code{out.sample.accuracy} The out-of-sample prediction
    accuracy.
    \item \code{prediction.accuracies} A vector of
    prediction accuracies for each respondent.
    \item \code{algorithm} The type of algorithm used.
    \item \code{n.questions.left.out} The number of questions left out
    for out-of-sample testing.
    \item \code{n.classes} The number of classes.
    \item \code{n.respondents} The number of respondents.
    \item \code{n.questions} The number of questions
    per respondent.
    \item \code{n.alternatives} The number of alternatives per question.
    \item \code{n.attributes} The number of attributes.
    \item \code{n.parameters} The number of parameters in the analysis.
    \item \code{time.taken} The time taken to run the analysis.
    \item \code{log.likelihood} The log likelihood.
    \item \code{bic} The Bayesian Information Criterion.}
}
\description{
Fit a choice-based conjoint model using methods such
    as Hierarchical Bayes
}
\examples{
\dontrun{
data(eggs, package = "flipChoice")
fit <- FitChoiceModel(experiment.data = eggs.data, hb.iterations = 100,
                      hb.chains = 1, tasks.left.out = 2)
print(fit)
ExtractParameterStats(fit)
PlotPosteriorIntervals(fit)
TracePlots(fit)

choices <- eggs.data[, 1:8]
questions <- data.frame(t(matrix(1:3040, nrow = 8)))
hb.prior.mean <- c(0, 0, 1, 1, 2, 1, 1, 2, 4, 0, 0, 0, -1, -3, -5, -9)
fit.with.prior <- FitChoiceModel(
    design.file = "http://wiki.q-researchsoftware.com/images/3/35/Eggs_design_with_levels.xlsx",
    choices = choices, questions = questions,
    hb.iterations = 100, hb.chains = 1,
    tasks.left.out = 2, hb.prior.mean = hb.prior.mean)
print(fit.with.prior)
}
}
